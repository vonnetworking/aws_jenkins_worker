AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates an EC2 instance with elastic IP for use as a dev box, returns ID and IP addr of the new EC2
  instance
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
  InstanceType:
    Description: EC2 instance type
    Type: String
  GitUrl:
    Description: "Git repo url to pull down containing config scripts in /scripts dir"
    Type: String
    Default: https://github.com/vonnetworking/aws_jenkins_worker.git
  BootstrapProvider:
    Description: Identifies the language used for bootstrapping the system to desired config
    AllowedValues:
      - ansible
      #- bash
      #- python
    Type: String
    Default: 'ansible'
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATHVM64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-0599cf11bd7f06277
      HVMG2: ami-0c6b1d09930fac512
    us-west-2:
      HVM64: ami-a0cfeed8
      HVMG2: ami-0e09505bc235aa82d
    us-west-1:
      HVM64: ami-0bdb828fd58c52235
      HVMG2: ami-066ee5fd4a9ef77f1
    us-east-2:
      HVM64: ami-0b59bfac6be064b78
      HVMG2: NOT_SUPPORTED
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
            - IPAddress=
            - !Ref IPAddress
            - '&&'
            - ''
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource  EC2Instance'
            #- '         --configsets config '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref JwInstanceProfile
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              python27-pip: []
              git: []
          commands:
            ansibleInstall:
              command: "sudo pip install ansible"

              env:
                TESTVAR: "i am a var"
              cwd: "~"
            runBootstrap:
              command: "sudo /opt/scripts/bootstrap/ansible/bs_wrapper.bash"
            downloadConfig:
              command: "git clone $GITURL /opt/scripts"
              env:
                GITURL: !Ref GitUrl
              cwd: "~"
  JwInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - LzAdmin
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
  IPAddress:
    Type: 'AWS::EC2::EIP'
  IPAssoc:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      InstanceId: !Ref EC2Instance
      EIP: !Ref IPAddress
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !Ref IPAddress
